<Window x:Class="Backpack.Presentation.Feature.Core.Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Backpack.Presentation.Feature.Core"
        xmlns:shared="clr-namespace:Backpack.Shared;assembly=Backpack.Shared"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:enum="clr-namespace:Backpack.Domain.Enum;assembly=Backpack.Domain"
        xmlns:system="clr-namespace:System.Globalization;assembly=System.Runtime"
        mc:Ignorable="d" ResizeMode="CanResizeWithGrip"
        d:DataContext="{d:DesignInstance Type=local:MainVM}"
        Style="{StaticResource MaterialDesignWindow}"
        Title="{x:Static shared:Constant.ApplicationName}">

    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Control+Shift" Command="{Binding ExecuteNewWindowCommand}" />
        <KeyBinding Key="L" Modifiers="Control+Shift" Command="{Binding ExecuteShowLogCommand}" />
        <KeyBinding Key="F4" Modifiers="Alt"  Command="{Binding ExecuteCloseWindowCommand}" />
        <KeyBinding Key="F1" Modifiers="Ctrl"  Command="{Binding ExecuteShowAboutCommand}" />
    </Window.InputBindings>

    <md:DialogHost Identifier="{x:Static enum:eDialogIdentifier.Core}" CloseOnClickAway="False" SnackbarMessageQueue="{Binding ElementName=Snackbar, Path=MessageQueue}"
                   DialogContentTemplateSelector="{StaticResource ViewLocator}">

        <Grid>
            <TextBlock Visibility="{Binding IsLoaded, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                        Text="{Binding LoadingMessage}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="22"/>

            <Grid Visibility="{Binding IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="25"/>
                </Grid.RowDefinitions>

                <!-- Menu -->
                <Menu Grid.Row="0" Padding="3 3" BorderBrush="{DynamicResource MaterialDesignDarkSeparatorBackground}" BorderThickness="0 0 0 1">
                    <MenuItem Header="File">
                        <MenuItem Header="New">
                            <MenuItem Header="New window" InputGestureText="Ctrl+Shift+N" Command="{Binding ExecuteNewWindowCommand}">
                                <MenuItem.Icon>
                                    <md:PackIcon Kind="DockWindow" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Exit" InputGestureText="Alt+F4" Command="{Binding ExecuteCloseWindowCommand}">
                            <MenuItem.Icon>
                                <md:PackIcon Kind="ExitToApp" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Tool">
                        <MenuItem Header="Check database integrity" Command="{Binding ExecuteCheckDatabaseIntegrityCommand}">
                            <MenuItem.Icon>
                                <md:PackIcon Kind="DatabaseCheckOutline" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Help">
                        <MenuItem Header="Show logs" InputGestureText="Ctrl+Shift+L" Command="{Binding ExecuteShowLogCommand}">
                            <MenuItem.Icon>
                                <md:PackIcon Kind="FileDocumentOutline" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="About" InputGestureText="Ctrl+F1" Command="{Binding ExecuteShowAboutCommand}">
                            <MenuItem.Icon>
                                <md:PackIcon Kind="AboutCircleOutline" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>

                <!-- Body -->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="2"/>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- Sidebar -->
                    <ListBox Grid.Column="0" SelectionMode="Single" x:Name="listBoxContainer" ItemsSource="{Binding Pages}" SelectedIndex="0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction  Command="{Binding ExecuteNavigateToCommand}" CommandParameter="{Binding ElementName=listBoxContainer, Path=SelectedItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="3 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="8" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <md:PackIcon Kind="{Binding Icon}"/>
                                    <TextBlock Text="{Binding Name}" 
                                               VerticalAlignment="Center" 
                                               TextWrapping="NoWrap" 
                                               TextTrimming="CharacterEllipsis" 
                                               Grid.Column="2" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource MaterialDesignDarkSeparatorBackground}" />

                    <!-- Content -->
                    <ContentControl Grid.Column="2" Margin="10" Content="{Binding CurrentPage}" ContentTemplateSelector="{StaticResource ViewLocator}" />

                    <!-- Snackbar -->
                    <md:Snackbar Grid.Column="2" Margin="10" x:Name="Snackbar" MessageQueue="{Binding Snackbar}" HorizontalAlignment="Right"/>
                </Grid>

                <!-- Status Bar -->
                <Border Grid.Row="2" Background="{Binding StatusBar.Message.Type, Converter={StaticResource StatusBarMessageTypeToColorConverter}}" Padding="10 0">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="8" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <md:PackIcon Grid.Column="0" Kind="{Binding StatusBar.Message.Type, Converter={StaticResource StatusBarMessageTypeToIconConverter}}"
                                     Foreground="White"/>

                        <TextBlock Grid.Column="2" FontWeight="Medium" Text="{Binding StatusBar.Message.Message}" Foreground="White" />
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </md:DialogHost>
</Window>
